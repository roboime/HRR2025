# Configuração Sistema de Percepção RoboIME HSL2025 - YOLOv8 + Geometria 3D Avançada
# Jetson Orin Nano Super - Sistema com 7 classes focadas em estratégia e localização
# Arquitetura: Estratégia (ball, robot) + Localização (landmarks) + Pipeline 3D

#=======================================#
# CONFIGURAÇÃO GERAL
#=======================================#

# Pipeline YOLOv8 + 3D avançado
pipeline:
  processing_fps: 30.0          # Taxa de processamento para Orin Nano Super
  debug_image: true             # Publicar imagens de debug com informações 3D
  debug_3d: true                # Ativar visualizações 3D avançadas
  log_fps: true                 # Log de performance a cada 10 segundos
  log_interval: 10.0            # Intervalo de log (segundos)
  enable_3d_processing: true    # Ativar pipeline 3D completo
  enable_tracking: true         # Ativar tracking temporal de objetos
  enable_prediction: true       # Ativar predição de trajetórias

#=======================================#
# CONFIGURAÇÃO GEOMETRIA 3D
#=======================================#

geometry_3d:
  # Calibração da câmera
  camera_info_path: "resources/calibration/camera_info.yaml"
  
  # Parâmetros de tracking
  tracking:
    max_objects: 20              # Máximo de objetos rastreados simultaneamente
    distance_threshold: 0.5      # Threshold de associação (metros)
    timeout_ball: 3.0           # Timeout para perder track da bola (segundos)
    timeout_other: 5.0          # Timeout para outros objetos (segundos)
    min_detections: 3           # Mínimo de detecções para criar track
    
  # Filtros temporais
  filtering:
    position_alpha: 0.7         # Suavização posicional (0-1)
    velocity_alpha: 0.5         # Suavização de velocidade (0-1)
    prediction_time: 0.5        # Tempo de predição (segundos)
    
  # Validação 3D
  validation:
    enable_size_validation: true # Validar tamanhos baseado em objetos conhecidos
    enable_physics_validation: true # Validar física da bola
    min_confidence_3d: 0.2      # Confiança mínima para aceitar detecção 3D
    max_distance: 8.0           # Distância máxima confiável (metros)
    min_distance: 0.3           # Distância mínima confiável (metros)
    
  # Análise de trajetória da bola
  ball_physics:
    gravity: 9.81               # Aceleração gravitacional (m/s²)
    air_resistance: 0.1         # Coeficiente de resistência do ar
    bounce_damping: 0.7         # Fator de amortecimento no quique
    min_airborne_height: 0.05   # Altura mínima para considerar "no ar" (metros)
    max_prediction_time: 10.0   # Tempo máximo de predição (segundos)

  # Pareamento de postes de gol
  goal_post_pairing:
    enable_pairing: true        # Ativar pareamento inteligente de postes
    goal_width_tolerance: 0.5   # Tolerância para largura do gol (2.6±0.5m)
    goal_center_y_tolerance: 0.5 # Tolerância para centro Y (próximo de 0)
    plate_x_tolerance: 0.5      # Tolerância para coordenada X da placa (±4.5±0.5)
    post_y_tolerance: 0.5       # Tolerância para coordenada Y dos postes (±1.3±0.5)
    min_pair_confidence: 0.4    # Confiança mínima para aceitar um par
    single_post_confidence_penalty: 0.6 # Multiplicador de confiança para poste único

#=======================================#
# CONFIGURAÇÃO YOLOv8
#=======================================#

yolov8:
  # Modelo simplificado (7 classes)
  model_path: "resources/models/robocup_simplified_yolov8.pt"
  fallback_model: "yolov8n.pt"  # Modelo padrão se customizado não encontrado
  
  # Parâmetros de detecção otimizados para 6 classes
  confidence_threshold: 0.6     # Threshold de confiança
  iou_threshold: 0.45           # Non-maximum suppression
  max_detections: 200           # Máximo de detecções por frame (reduzido)
  
  # Performance
  device: "cuda"                # GPU (Orin Nano Super)
  half_precision: true          # FP16 para melhor performance
  warmup_frames: 5              # Frames de aquecimento
  
  # Classes detectadas (7 classes total) em ordem alfabética
  classes:
    area_corner: 0       # Cantos da área
    ball: 1              # Bola de futebol
    center_circle: 2     # Círculo central
    field_corner: 3      # Cantos do campo
    goal_post: 4         # Postes de gol (unificados)
    penalty_mark: 5      # Marca do penalty
    robot: 6             # Robôs (sem distinção de cor)
  
  # Configurações específicas por classe (com validação 3D)
  class_configs:
    ball:
      priority: "high"                    # Alta prioridade
      confidence_weight: 1.0              # Peso de confiança máximo
      enable_3d_tracking: true            # Ativar tracking 3D específico
      enable_physics_prediction: true     # Ativar predição física
      expected_size_range: [0.06, 0.07]   # Diâmetro esperado da bola (metros)
      size_tolerance: 0.3                 # Tolerância de tamanho (30%)
      
    robot:
      priority: "high"                    # Alta prioridade para estratégia
      confidence_weight: 0.9              # Peso de confiança alto
      enable_3d_tracking: true            # Ativar tracking 3D
      expected_size_range: [0.8, 1.0]     # Altura esperada do robô (metros)
      size_tolerance: 0.4                 # Tolerância maior para robôs
      
    penalty_mark:
      priority: "medium"                  # Prioridade média para localização
      confidence_weight: 0.8              # Peso de confiança bom
      enable_3d_tracking: false           # Landmarks são estáticos
      expected_size_range: [0.08, 0.12]   # Diâmetro esperado da marca (metros)
      size_tolerance: 0.5                 # Tolerância alta para landmarks
      
    goal_post:
      priority: "medium"                  # Prioridade média para localização
      confidence_weight: 0.8              # Peso de confiança bom
      enable_3d_tracking: false           # Postes são estáticos
      expected_size_range: [0.08, 0.15]   # Largura/altura aparente do poste (metros)
      size_tolerance: 0.3                 # Tolerância média
      
    center_circle:
      priority: "medium"                  # Prioridade média para localização
      confidence_weight: 0.7              # Peso de confiança moderado
      enable_3d_tracking: false           # Landmarks são estáticos
      expected_size_range: [1.4, 1.6]     # Diâmetro esperado do círculo (metros)
      size_tolerance: 0.4                 # Tolerância alta
      
    field_corner:
      priority: "medium"                  # Prioridade média para localização
      confidence_weight: 0.6              # Peso de confiança moderado
      enable_3d_tracking: false           # Landmarks são estáticos
      expected_size_range: [0.1, 0.3]     # Tamanho estimado do canto (metros)
      size_tolerance: 0.8                 # Tolerância muito alta para cantos
      
    area_corner:
      priority: "medium"                  # Prioridade média para localização
      confidence_weight: 0.6              # Peso de confiança moderado
      enable_3d_tracking: false           # Landmarks são estáticos
      expected_size_range: [0.1, 0.3]     # Tamanho estimado do canto (metros)
      size_tolerance: 0.8                 # Tolerância muito alta para cantos

#=======================================#
# CONFIGURAÇÃO DE CÂMERA
#=======================================#

camera:
  # Tipo de câmera ativa - corresponde à configuração em camera_info.yaml
  active_camera: "imx219_csi"    # "imx219_csi" ou "c930_usb"
  
  # Configurações CSI (IMX219)
  csi:
    type: "csi"
    device_id: 0                # Sensor ID para nvarguscamerasrc
    width: 1280
    height: 720
    fps: 30
    flip_method: 0              # 0=none, 1=counterclockwise, 2=rotate-180, 3=clockwise
    
    # GStreamer pipeline para CSI (Jetson)
    gstreamer_pipeline: |
      nvarguscamerasrc sensor-id={device_id} ! 
      video/x-raw(memory:NVMM), width={width}, height={height}, format=NV12, framerate={fps}/1 ! 
      nvvidconv flip-method={flip_method} ! 
      video/x-raw, format=BGRx ! 
      videoconvert ! 
      video/x-raw, format=BGR ! 
      appsink max-buffers=1 drop=True sync=False
  
  # Configurações USB (C930)
  usb:
    type: "usb"
    device_id: 0                # /dev/video0
    width: 1280
    height: 720
    fps: 30
    
    # Configurações específicas USB
    fourcc: "MJPG"              # Codec de vídeo (MJPG, YUYV)
    buffer_size: 1              # Tamanho do buffer
    autofocus: true             # Autofoco (se suportado)
    auto_exposure: true         # Exposição automática
    
    # Configurações manuais (quando auto desabilitado)
    manual_exposure: 156        # Valor de exposição manual
    brightness: 128             # Brilho (0-255)
    contrast: 128               # Contraste (0-255)
    saturation: 128             # Saturação (0-255)
    gain: 0                     # Ganho manual
  
  # Configurações comuns
  common:
    enable_undistort: true      # Ativar correção de distorção
    enable_3d_projection: true  # Ativar projeção 3D avançada
    warmup_frames: 10           # Frames para estabilizar câmera

#=======================================#
# CONFIGURAÇÃO DE PERFORMANCE
#=======================================#

performance:
  # Otimizações Jetson
  enable_tensorrt: true         # TensorRT para YOLOv8 (se disponível)
  enable_nvmm: true            # NVMM buffers para menor latência (CSI)
  enable_gpu_preprocessing: true # Pré-processamento na GPU
  
  # Gerenciamento de memória
  max_memory_usage: 4096       # MB máximo de uso de memória
  gc_interval: 100             # Intervalo de garbage collection (frames)
  
  # Threading
  enable_async_processing: true # Processamento assíncrono
  max_worker_threads: 2        # Máximo de threads de processamento

#=======================================#
# CONFIGURAÇÃO DE DEBUG E LOGS
#=======================================#

debug:
  # Visualizações
  draw_bboxes: true            # Desenhar bounding boxes
  draw_labels: true            # Desenhar labels
  draw_3d_info: true           # Desenhar informações 3D
  draw_trajectories: true      # Desenhar trajetórias previstas
  draw_ground_projection: true # Desenhar projeção no chão
  
  # Informações textuais
  show_distance: true          # Mostrar distância calculada
  show_size: true              # Mostrar tamanho estimado
  show_confidence: true        # Mostrar confiança total (2D + 3D)
  show_camera_info: true       # Mostrar informações da câmera
  
  # Cores por classe (BGR)
  colors:
    ball: [0, 255, 0]          # Verde
    robot: [255, 100, 100]     # Azul claro
    penalty_mark: [0, 255, 255] # Amarelo
    goal_post: [255, 0, 255]   # Magenta
    center_circle: [255, 255, 0] # Ciano
    field_corner: [128, 0, 255] # Roxo
    area_corner: [255, 128, 0]  # Laranja

# Configuração para logs estruturados
logging:
  level: "INFO"
  log_3d_stats: true          # Log estatísticas 3D
  log_tracking_stats: true    # Log estatísticas de tracking
  log_performance: true       # Log métricas de performance 