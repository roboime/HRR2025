# Base NVIDIA L4T image for JetPack 4.6 (L4T R32.6.1 - Ubuntu 18.04)
FROM nvcr.io/nvidia/l4t-base:r32.6.1

# Desabilita interações manuais no apt
ENV DEBIAN_FRONTEND=noninteractive 

# Define variáveis de ambiente ROS
ENV ROS_DISTRO=eloquent
ENV ROS_PYTHON_VERSION=3

# (Opcional) Atualiza locale para UTF-8, se necessário
RUN apt-get update && apt-get install -y locales \
    && locale-gen en_US.UTF-8 && update-locale LANG=en_US.UTF-8

# Adiciona chave e repositório do ROS2 Eloquent (Ubuntu 18.04 Bionic)
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl gnupg2 lsb-release ca-certificates && \
    update-ca-certificates && \
    rm -rf /var/lib/apt/lists/*
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \
    -o /usr/share/keyrings/ros-archive-keyring.gpg 
RUN echo "deb [arch=arm64 signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \
    http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" \
    > /etc/apt/sources.list.d/ros2.list

# Adiciona repositórios do JetPack (para OpenCV e demais libs NVIDIA)
RUN apt-key adv --fetch-keys https://repo.download.nvidia.com/jetson/jetson-ota-public.asc 
RUN echo "deb https://repo.download.nvidia.com/jetson/common r32.6 main" \
    > /etc/apt/sources.list.d/nvidia-l4t-common.list && \
    echo "deb https://repo.download.nvidia.com/jetson/t210 r32.6 main" \
    > /etc/apt/sources.list.d/nvidia-l4t-t210.list

# Configurar permissões da câmera
RUN usermod -a -G video root

# Instala ROS2 Eloquent (ros-base) e pacotes ROS adicionais
# Instala OpenCV (NVIDIA) e GStreamer (se não já incluído)
RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-eloquent-ros-base \
    ros-eloquent-launch-xml \
    ros-eloquent-launch-yaml \
    ros-eloquent-rviz2 \
    ros-eloquent-vision-msgs \ 
    ros-eloquent-vision-opencv \
    ros-eloquent-image-tools \
    ros-eloquent-rclcpp \
    ros-eloquent-rclpy \
    ros-eloquent-sensor-msgs \
    ros-eloquent-tf2 \
    ros-eloquent-tf2-ros \
    ros-eloquent-tf2-geometry-msgs \
    ros-eloquent-geometry-msgs \
    python3-colcon-common-extensions \
    python3-rosdep \
    python3-pip \
    libopencv-dev libopencv-python \
    gstreamer1.0-tools \                
    && rm -rf /var/lib/apt/lists/*

# Instala pacotes Python necessários via pip (nomes corretos)
RUN pip3 install --no-cache-dir \
    opencv-python \
    matplotlib \
    numpy \
    pyyaml

# Inicializa o rosdep
RUN rosdep init || echo "rosdep já inicializado" && \
    rosdep update

# Configura workspace ROS2 (opcional)
RUN mkdir -p /ros2_ws/src

# Configura variáveis de ambiente para ROS2
RUN echo 'source /opt/ros/eloquent/setup.bash' >> /root/.bashrc

# Copia o script de entrypoint para o container
COPY docker/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

WORKDIR /ros2_ws

# Define o entrypoint para configurar o ambiente ROS2
ENTRYPOINT ["/entrypoint.sh"]
CMD ["/bin/bash"]
