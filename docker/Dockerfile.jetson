# Base NVIDIA L4T image for JetPack 6.2 (L4T R36.4 - Ubuntu 22.04)
# Jetson Orin Nano Super Developer Kit
FROM nvcr.io/nvidia/l4t-base:r36.2.0

# Desabilita interações manuais no apt
ENV DEBIAN_FRONTEND=noninteractive 

# Define variáveis de ambiente ROS2 Humble (LTS)
ENV ROS_DISTRO=humble
ENV ROS_PYTHON_VERSION=3

# Atualiza locale para UTF-8
RUN --network=host apt-get update || true && apt-get install -y locales \
    && locale-gen en_US.UTF-8 && update-locale LANG=en_US.UTF-8

# Adiciona chave e repositório do ROS2 Humble (Ubuntu 22.04 Jammy)
RUN --network=host apt-get update || true && apt-get install -y --no-install-recommends \
    curl gnupg2 lsb-release ca-certificates software-properties-common && \
    update-ca-certificates

RUN --network=host curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \
    -o /usr/share/keyrings/ros-archive-keyring.gpg

RUN echo "deb [arch=arm64 signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \
    http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" \
    > /etc/apt/sources.list.d/ros2.list

# Configurar permissões da câmera para Jetson Orin
RUN usermod -a -G video root

# Instalar ROS2 Humble e dependências essenciais
RUN --network=host bash -lc 'for i in 1 2 3 4 5; do \
        echo "Tentativa $i de instalar ROS2 Humble..." && \
        apt-get update && \
        apt-get install -y --no-install-recommends \
            ros-humble-ros-base \
            ros-humble-image-transport \
            ros-humble-vision-opencv \
            ros-humble-vision-msgs \
            ros-humble-tf2 \
            ros-humble-tf2-ros \
            ros-humble-tf2-geometry-msgs \
            ros-humble-cv-bridge \
            python3-colcon-common-extensions \
            python3-rosdep \
            python3-pip \
            python3-opencv \
            python3-dev \
            build-essential \
            cmake && \
        break || \
        (echo "Falha na tentativa $i. Esperando..." && sleep 30); \
    done'

# Inicializa o rosdep
RUN --network=host rosdep init || echo "rosdep já inicializado ou falhou" && \
    rosdep update || echo "rosdep update falhou, continuando mesmo assim"

# Configura workspace ROS2
RUN mkdir -p /ros2_ws/src

# Configura variáveis de ambiente para ROS2 Humble
RUN echo 'source /opt/ros/humble/setup.bash' >> /root/.bashrc

# Configura variáveis de ambiente para CUDA 12.2 (JetPack 6.2)
ENV CUDA_HOME=/usr/local/cuda-12.2
ENV LD_LIBRARY_PATH=/usr/local/cuda-12.2/targets/aarch64-linux/lib:/usr/local/cuda/lib64
ENV PATH=/usr/local/cuda-12.2/bin:${PATH}

# Criar diretório para scripts
RUN mkdir -p /setup

# Copia o arquivo de script de instalação atualizado para o container
COPY docker/install_dependencies.sh /setup/
RUN chmod +x /setup/install_dependencies.sh

# Copia o script de entrypoint para o container
COPY docker/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

WORKDIR /ros2_ws

# Define o entrypoint para configurar o ambiente ROS2
ENTRYPOINT ["/entrypoint.sh"]
CMD ["/bin/bash"]

# === Instruções para Jetson Orin Nano Super ===
# Para habilitar Super Mode (67 TOPS): sudo nvpmodel -m 2
# Para verificar performance: jtop
# Para instalar dependências Python extras: /setup/install_dependencies.sh
# Para build do projeto: colcon build --packages-select perception
