#!/bin/bash
set -e

# Cores para melhorar a visualiza√ß√£o
VERDE='\033[0;32m'
AZUL='\033[0;34m'
AMARELO='\033[1;33m'
VERMELHO='\033[0;31m'
CIANO='\033[0;36m'
SEM_COR='\033[0m'

# Fun√ß√£o para exibir cabe√ßalhos
exibir_cabecalho() {
    echo -e "${AZUL}============================================================${SEM_COR}"
    echo -e "${VERDE}$1${SEM_COR}"
    echo -e "${AZUL}============================================================${SEM_COR}"
}

# Fun√ß√£o para exibir informa√ß√µes com formata√ß√£o
exibir_info() {
    echo -e "${CIANO}$1:${SEM_COR} $2"
}

# Fun√ß√£o para exibir comandos
exibir_comando() {
    echo -e "  ${AMARELO}$1${SEM_COR}"
}

# Fun√ß√£o para verificar disponibilidade de recursos
verificar_disponibilidade() {
    local recurso=$1
    local comando=$2
    local mensagem_erro=$3
    
    echo -e "${CIANO}$recurso:${SEM_COR}"
    eval $comando || echo -e "  ${VERMELHO}$mensagem_erro${SEM_COR}"
}

# Configura√ß√£o do ambiente ROS2
source /opt/ros/$ROS_DISTRO/setup.bash

# Configura√ß√£o do workspace, se existir
if [ -f "/ros2_ws/install/setup.bash" ]; then
    source /ros2_ws/install/setup.bash
fi

# Garante que as vari√°veis de ambiente necess√°rias estejam definidas
export ROS_DOMAIN_ID=0
export RMW_IMPLEMENTATION=rmw_fastrtps_cpp
export PYTHONIOENCODING=utf-8

# Exibe informa√ß√µes do sistema
exibir_cabecalho "ü§ñ Container ROS2 $ROS_DISTRO para Jetson inicializado!"

# Exibe informa√ß√µes do ambiente ROS
exibir_info "Vers√£o ROS" "$ROS_DISTRO"
exibir_info "Vers√£o Python" "$ROS_PYTHON_VERSION"
exibir_info "Implementa√ß√£o RMW" "$RMW_IMPLEMENTATION"
exibir_info "Domain ID" "$ROS_DOMAIN_ID"

# Verifica pacotes ROS dispon√≠veis
echo ""
verificar_disponibilidade "Pacotes ROS2 do projeto" \
    "ros2 pkg list | grep -E 'roboime|perception'" \
    "Nenhum pacote personalizado encontrado. Execute o build primeiro."

# Verifica GPU NVIDIA
echo ""
verificar_disponibilidade "Status da GPU NVIDIA" \
    "nvidia-smi --query-gpu=name,temperature.gpu,utilization.gpu,utilization.memory --format=csv,noheader" \
    "GPU NVIDIA n√£o detectada ou drivers n√£o instalados."

# Verifica dispositivos de c√¢mera
echo ""
verificar_disponibilidade "C√¢meras dispon√≠veis" \
    "ls -la /dev/video* 2>/dev/null" \
    "Nenhum dispositivo de c√¢mera encontrado. Verifique as conex√µes."

# Exibe informa√ß√µes de uso
echo ""
exibir_cabecalho "üìã Comandos √∫teis"

echo -e "${CIANO}Para instalar as depend√™ncias:${SEM_COR}"
exibir_comando "/setup/install_dependencies.sh"

echo -e "${CIANO}Para compilar o workspace:${SEM_COR}"
exibir_comando "cd /ros2_ws && colcon build --symlink-install"

echo -e "${CIANO}Para visualizar t√≥picos dispon√≠veis:${SEM_COR}"
exibir_comando "ros2 topic list"

echo -e "${AZUL}============================================================${SEM_COR}"

# Executa o comando passado como argumento ou inicia um shell
exec "$@" || exec /bin/bash
